{
	"auto_complete":
	{
		"selected_items":
		[
			[
				"ma",
				"match"
			],
			[
				"lo",
				"loadedShipment"
			],
			[
				"Ma",
				"Material"
			],
			[
				"line",
				"lineItem"
			],
			[
				"lin",
				"lineItems"
			],
			[
				"lineI",
				"lineItem"
			],
			[
				"mater",
				"material"
			],
			[
				"materi",
				"materials"
			],
			[
				"lineIt",
				"lineItems"
			],
			[
				"material",
				"materialsFilter"
			],
			[
				"lineIte",
				"lineItemNames"
			],
			[
				"lineItem",
				"lineItems"
			],
			[
				"object",
				"objectQuantity"
			],
			[
				"inven",
				"inventoryTransactionObject"
			],
			[
				"inventory",
				"inventoryTransactionObject"
			],
			[
				"invento",
				"inventoryTransactionObjects"
			],
			[
				"response",
				"responseData"
			],
			[
				"respons",
				"responseData"
			],
			[
				"inv",
				"inventoryTransactions"
			],
			[
				"respon",
				"responseData"
			],
			[
				"objec",
				"objectQuantity"
			],
			[
				"obje",
				"objectQuantity"
			],
			[
				"lineItemObj",
				"lineItemObjectForLineItemRecord"
			],
			[
				"create",
				"createInventoryTransaction"
			],
			[
				"shipmen",
				"shipmentId"
			],
			[
				"Sh",
				"Shoulder"
			],
			[
				"incoming",
				"incomingCount"
			],
			[
				"shipmetn",
				"shipmentId"
			],
			[
				"shipment",
				"shipmentId"
			],
			[
				"outoing",
				"outgoingQuantity"
			],
			[
				"outgoing",
				"outgoingQuantity"
			],
			[
				"trans",
				"transaction"
			],
			[
				"out",
				"outgoingCount"
			],
			[
				"In",
				"Incoming"
			],
			[
				"incom",
				"incomingCount"
			],
			[
				"record",
				"recordToObject"
			],
			[
				"crea",
				"createdTime"
			],
			[
				"new",
				"newInventoryTransactions"
			],
			[
				"cons",
				"constructor"
			],
			[
				"table",
				"tables"
			],
			[
				"ut",
				"utcOffset"
			],
			[
				"form",
				"formatSting"
			],
			[
				"string",
				"stringify"
			],
			[
				"re",
				"requestedOn"
			],
			[
				"estimat",
				"estimatedArrivalDate"
			],
			[
				"estimate",
				"estimatedArrivalDate"
			],
			[
				"estima",
				"estimatedShipDate"
			],
			[
				"estimated",
				"estimatedShipDate"
			],
			[
				"requ",
				"requestedOn"
			],
			[
				"date",
				"dateStringFormat"
			],
			[
				"dateS",
				"dateStringFormat"
			],
			[
				"is",
				"isValid"
			],
			[
				"attac",
				"attachments"
			],
			[
				"att",
				"attachments"
			],
			[
				"created",
				"createdShipments"
			],
			[
				"createdShip",
				"createdShipmentLineItems"
			],
			[
				"des",
				"destoryAll"
			],
			[
				"Shipment",
				"Shipments"
			],
			[
				"Mater",
				"Materials"
			],
			[
				"deleted",
				"deletedRecord"
			],
			[
				"ship",
				"shipmentLineItem"
			],
			[
				"len",
				"length"
			],
			[
				"Ship",
				"ShipmentLineItemsFilter"
			],
			[
				"to",
				"totalQuantity"
			],
			[
				"airt",
				"airtablePromise"
			],
			[
				"shipme",
				"shipmentLineItems"
			],
			[
				"air",
				"airtablePromise"
			],
			[
				"atta",
				"attachmentUrl"
			],
			[
				"from",
				"from"
			],
			[
				"transfer",
				"transferId"
			],
			[
				"it",
				"items"
			],
			[
				"mappe",
				"mappedOrder"
			],
			[
				"mat",
				"materialName"
			],
			[
				"c",
				"create"
			],
			[
				"e",
				"exports"
			],
			[
				"aritable",
				"airtable-filter"
			],
			[
				"recor",
				"recordId"
			],
			[
				"Inve",
				"inventoryTransactions"
			],
			[
				"inve",
				"inventoryTransaction"
			],
			[
				"Shipm",
				"Shipments"
			],
			[
				"rece",
				"receivedDate"
			],
			[
				"rec",
				"receivedDate"
			],
			[
				"pro",
				"program"
			],
			[
				"comm",
				"commandString"
			],
			[
				"Shipmen",
				"ShipmentLineItems"
			],
			[
				"shipm",
				"shipmentLineItems"
			],
			[
				"se",
				"serializedPromise"
			],
			[
				"est",
				"estimatedShipDate"
			],
			[
				"estim",
				"estimatedShipDate"
			],
			[
				"esti",
				"estimatedCost"
			],
			[
				"es",
				"estimatedCost"
			],
			[
				"req",
				"requestedOn"
			],
			[
				"for",
				"formats"
			],
			[
				"salesChann",
				"salesChannelSKUs"
			],
			[
				"oper",
				"operations"
			],
			[
				"ord",
				"orderPasses"
			],
			[
				"Sales",
				"SalesChannelSKUs"
			],
			[
				"start",
				"startMoment"
			],
			[
				"startOf",
				"startOfPeriod"
			],
			[
				"sta",
				"start"
			],
			[
				"end",
				"endMoment"
			],
			[
				"perio",
				"periods"
			],
			[
				"sales",
				"salesChannelProducts"
			],
			[
				"SKU",
				"SKUs"
			],
			[
				"maerialNa",
				"materialName"
			],
			[
				"mate",
				"materialNames"
			],
			[
				"or",
				"orderNumber"
			],
			[
				"mappedOr",
				"mappedOrderNumber"
			],
			[
				"order",
				"orderNumber"
			],
			[
				"get",
				"getOrders"
			],
			[
				"fulfillmen",
				"fulfillmentMaterials"
			],
			[
				"exclu",
				"excludeOrders"
			],
			[
				"items",
				"itemsOrderedQuery"
			],
			[
				"ful",
				"fulfillmentSku"
			],
			[
				"mapped",
				"mappedOrders"
			],
			[
				"sku",
				"skuQuery"
			],
			[
				"Has",
				"HasTag"
			],
			[
				"has",
				"HasTag"
			],
			[
				"tag",
				"tagId"
			],
			[
				"ships",
				"shipstationHelper"
			],
			[
				"shipstation",
				"shipstationHelper"
			],
			[
				"getTag",
				"getTagId"
			],
			[
				"fulfi",
				"fulfillment"
			],
			[
				"mapp",
				"mappedOrder"
			],
			[
				"map",
				"mapItemsInOrder"
			],
			[
				"mapIte",
				"mapItemsInOrder"
			],
			[
				"fulfil",
				"fulfillmentSku"
			],
			[
				"con",
				"console"
			]
		]
	},
	"buffers":
	[
	],
	"build_system": "",
	"build_system_choices":
	[
	],
	"build_varint": "",
	"command_palette":
	{
		"height": 392.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"pack",
				"Package Control: Install Package"
			]
		],
		"width": 449.0
	},
	"console":
	{
		"height": 126.0,
		"history":
		[
			"import urllib.request,os,hashlib; h = '2deb499853c4371624f5a07e27c334aa' + 'bf8c4e67d14fb0525ba4f89698a6d7e1'; pf = 'Package Control.sublime-package'; ipp = sublime.installed_packages_path(); urllib.request.install_opener( urllib.request.build_opener( urllib.request.ProxyHandler()) ); by = urllib.request.urlopen( 'http://packagecontrol.io/' + pf.replace(' ', '%20')).read(); dh = hashlib.sha256(by).hexdigest(); print('Error validating download (got %s instead of %s), please try manual install' % (dh, h)) if dh != h else open(os.path.join( ipp, pf), 'wb' ).write(by)"
		]
	},
	"distraction_free":
	{
		"menu_visible": true,
		"show_minimap": false,
		"show_open_files": false,
		"show_tabs": false,
		"side_bar_visible": false,
		"status_bar_visible": false
	},
	"expanded_folders":
	[
		"/Users/Jon/Code/json-terminal"
	],
	"file_history":
	[
		"/Users/Jon/Code/bike-pretty-server/node_modules/airtable/lib/record.js",
		"/Users/Jon/Code/bike-pretty-server/test/test.js",
		"/Users/Jon/Code/bike-pretty-server/routes/business-model/shipments.js",
		"/Users/Jon/Code/bike-pretty-server/routes/fulfillment/index.js",
		"/Users/Jon/Code/bike-pretty-server/index.js",
		"/Users/Jon/Code/bike-pretty-server/package.json",
		"/Users/Jon/Code/bike-pretty-server/business-model-constants.json",
		"/Users/Jon/Code/bike-pretty-server/routes/fulfillment/sku-mapper.js",
		"/Users/Jon/Code/bike-pretty-server/routes/inventory/index.js",
		"/Users/Jon/Code/bike-pretty-server/utils/airtable-promise.js",
		"/Users/Jon/Code/bike-pretty-server/node_modules/airtable-filter/filter.js",
		"/Users/Jon/Code/bike-pretty-server/routes/business-model/inventory-transactions.js",
		"/Users/Jon/Code/bike-pretty-server/schema.json",
		"/Users/Jon/Code/bike-pretty-server/routes/business-model/materials.js",
		"/Users/Jon/Code/bike-pretty-server/routes/fulfillment/material-mapper.js",
		"/Users/Jon/Code/bike-pretty-server/routes/otto/index.js",
		"/Users/Jon/Code/bike-pretty-server/routes/zapier/index.js",
		"/Users/Jon/Code/bike-pretty-server/routes/fulfillment/has-tag-rule.js",
		"/Users/Jon/Code/bike-pretty-server/routes/fulfillment/shipstation-helper.js",
		"/Users/Jon/Code/bike-pretty-server/routes/business-model/index.js",
		"/Users/Jon/Code/bike-pretty-server/routes/shipments/index.js",
		"/Users/Jon/Code/bike-pretty-server/routes/business-model/inventory-transaction/index.js",
		"/Users/Jon/Code/bike-pretty-server/node_modules/airtable/lib/table.js",
		"/Users/Jon/Code/bike-pretty-server/routes/inventory-transaction/index.js",
		"/Users/Jon/Code/bike-pretty-server/routes/fulfillment/always-rule.js",
		"/Users/Jon/Code/bike-pretty-server/node_modules/airtable-query/index.js",
		"/Users/Jon/Code/bike-pretty-server/routes/hacks.js",
		"/Users/Jon/Code/bike-pretty-server/routes/fulfillment.js",
		"/Users/Jon/Code/bike-pretty-server/fulfillment/shipstation-helper.js",
		"/Users/Jon/Code/bike-pretty-server/fulfillment/material-mapper.js",
		"/Users/Jon/Code/bike-pretty-server/fulfillment/sku-mapper.js",
		"/Users/Jon/Code/bike-pretty-server/fulfillment/has-tag-rule.js",
		"/Users/Jon/Code/bike-pretty-server/mapper/mapper.js",
		"/Users/Jon/Code/bike-pretty-server/node_modules/node-shipstation/nodeshipstation.js",
		"/Users/Jon/Code/bike-pretty-server/airtable/airtable-query.js",
		"/Users/Jon/Code/bike-pretty-server/airtable-query.js",
		"/Users/Jon/Code/shopspace/README.md",
		"/Users/Jon/Code/shopspace/test/test.js",
		"/Users/Jon/Code/shopspace/shopspace-server/templates/TemplateRenderer.js",
		"/Users/Jon/Code/shopspace/shopspace-server/templates/Template.js",
		"/Users/Jon/Code/shopspace/index.js",
		"/Users/Jon/Code/shopspace/shopspace-server/redirects/ProductImage.js",
		"/Users/Jon/Code/shopspace/shopspace-server/redirects/ProductPage.js",
		"/Users/Jon/Code/shopspace/package.json",
		"/Users/Jon/Code/shopspace/.env",
		"/Users/Jon/Code/shopspace/shopify/ProductPage.js",
		"/Users/Jon/Code/shopspace/squarespace/templates/test.html",
		"/Users/Jon/Code/shopspace/squarespace/BlockRenderer.js",
		"/Users/Jon/Code/shopspace/shopify/ProductImage.js",
		"/Users/Jon/Code/shopspace/squarespace/Block.js",
		"/Users/Jon/Code/shopspace/shopify/webhooks/ProductUpdated.js",
		"/Users/Jon/Code/scholareverywhereadmin/ScholarEverywhereAdmin.sublime-project",
		"/Users/Jon/Code/shopspace/setup.js",
		"/Users/Jon/Code/shopspace/cloud/main.js",
		"/Users/Jon/Code/shopspace/node_modules/rediscache/dist/rediscache.js",
		"/Users/Jon/Code/shopspace/shopify/Product.js",
		"/Users/Jon/Code/shopspace/node_modules/redis-parser/lib/parser.js",
		"/Users/Jon/Code/shopspace/node_modules/redis-parser/lib/replyError.js",
		"/Users/Jon/Code/shopspace/node_modules/redis/index.js",
		"/Users/Jon/Code/shopspace/node_modules/redis-dot/redis-dot.js",
		"/Users/Jon/Code/shopspace/node_modules/http-signature/lib/parser.js",
		"/Users/Jon/Desktop/parse-dashboard/Parse-Dashboard/parse-dashboard-config.json",
		"/Users/Jon/Code/go-nimbly-parse-server-example/index.js",
		"/Users/Jon/Code/parse-migration-blog-post/parse-server-example/package.json",
		"/Users/Jon/Code/parse-migration-blog-post/parse-server-example/index.js",
		"/Users/Jon/Code/Ryde/Server/cloud/v3/group.js",
		"/Users/Jon/Code/Ryde/Server/csvApi.js",
		"/Users/Jon/Code/Ryde/Server/index.js",
		"/Users/Jon/Code/Ryde/Server/package.json",
		"/Users/Jon/Code/parse-dashboard/Parse-Dashboard/parse-dashboard-config.json",
		"/Users/Jon/Code/Ryde/Server/cloud/main.js",
		"/Users/Jon/Code/Ryde/Server/cloud/v3/locationEngine.js",
		"/Users/Jon/Code/Ryde/Server/cloud/v3/user.js",
		"/Users/Jon/Code/Ryde/Server/cloud/v3/stats.js",
		"/Users/Jon/Code/Ryde/Server/cloud/v3/profile.js",
		"/Users/Jon/Code/Ryde/Server/cloud/jobs.js",
		"/Users/Jon/Code/Ryde/Server/cloud/v3/approveTrip.js",
		"/Users/Jon/Code/Ryde/Server/cloud/v3/googleDirections.js",
		"/Users/Jon/Code/Ryde/Server/cloud/v3/shop.js",
		"/Users/Jon/Code/Ryde/Server/cloud/v2/group.js",
		"/Users/Jon/Code/Ryde/Server/node_modules/parse-server/node_modules/parse-server-push-adapter/node_modules/apn/node_modules/node-forge/nodejs/test/pkcs1.js",
		"/Users/Jon/Code/parse-dashboard/Parse-Dashboard/index.js",
		"/Users/Jon/Code/parse-dashboard-ryde/Parse-Dashboard/parse-dashboard-config.json",
		"/Users/Jon/Code/Ryde/Server/cloud/modePrediction/modePrediction.js",
		"/Users/Jon/Code/Ryde/Server/cloud/modePrediction/percentage.js",
		"/Users/Jon/Code/Ryde/Server/cloud/modePrediction/probability.js",
		"/Users/Jon/Code/Ryde/Server/cloud/v3/analytics.js",
		"/Users/Jon/Code/Ryde/Server/cloud/v3/modePrediction.js",
		"/Users/Jon/Code/Ryde/Ryde-Server/cloud/v3",
		"/Users/Jon/Code/Boomcast-iOS-App/Server/boomcastserver.sublime-project",
		"/Users/Jon/Code/Ryde/Server/web/webMain.js",
		"/Users/Jon/Code/Boomcast-iOS-App/ClinkMeCloudCode/cloud/main.js",
		"/Users/Jon/Code/Ryde/Server/cloud/v3/tests.js",
		"/Users/Jon/Code/Ryde/Server/ryde-server.sublime-project",
		"/Users/Jon/Desktop/parse-server and tools/Server/cloud/jobs.js",
		"/Users/Jon/Code/Ryde/Server/public/test.html",
		"/Users/Jon/Code/Ryde/Server/public/choose_password.html",
		"/Users/Jon/Downloads/invalid_link.html",
		"/Users/Jon/Code/Ryde/Server/cloud/v2/profile.js",
		"/Users/Jon/Code/Ryde/Server/cloud/jobs/jobs.js",
		"/Users/Jon/Code/Ryde/Server/cloud/jobs/jobTest.js",
		"/Users/Jon/Code/Ryde/Server/jobs/weeklyReset.js",
		"/Users/Jon/Code/Ryde/Ryde-Server/cloud/v3/approveTrip.js",
		"/Users/Jon/Code/Ryde/Ryde-Server/cloud/v3/googleDirections.js",
		"/Users/Jon/Code/Ryde/Ryde-Server/cloud/v3/group.js",
		"/Users/Jon/Code/Ryde/Ryde-Server/cloud/v3/locationEngine.js",
		"/Users/Jon/Code/Ryde/Ryde-Server/cloud/v3/user.js",
		"/Users/Jon/Code/Ryde/Ryde-Server/cloud/v2/approveTrip.js",
		"/Users/Jon/Code/Ryde/Ryde-Server/cloud/v2/googleDirections.js",
		"/Users/Jon/Code/Ryde/Ryde-Server/cloud/v2/group.js",
		"/Users/Jon/Code/Ryde/Ryde-Server/cloud/v2/locationEngine.js",
		"/Users/Jon/Code/Ryde/Ryde-Server/cloud/v2/profile.js",
		"/Users/Jon/Code/Ryde/Ryde-Server/cloud/v2/stats.js",
		"/Users/Jon/Code/Ryde/Ryde-Server/cloud/v2/user.js",
		"/Users/Jon/Code/Ryde/Ryde-Server/package.json",
		"/Users/Jon/Code/Ryde/Ryde-Server/cloud/v1/followUtils.js",
		"/Users/Jon/Code/Ryde/Ryde-Server/cloud/v1/groups.js",
		"/Users/Jon/Code/Ryde/Ryde-Server/cloud/v1/leaderboard.js",
		"/Users/Jon/Code/Ryde/Ryde-Server/cloud/v1/profile.js",
		"/Users/Jon/Code/Ryde/Ryde-Server/index.js",
		"/Users/Jon/heroku/parse-server-example/cloud/main.js",
		"/Users/Jon/Code/Ryde/CloudCode/cloud/main.js",
		"/Users/Jon/Code/Ryde/CloudCode/cloud/v1/followUtils.js",
		"/Users/Jon/Code/Ryde/CloudCode/cloud/v1/groups.js",
		"/Users/Jon/Code/Ryde/CloudCode/cloud/v1/leaderboard.js",
		"/Users/Jon/Code/Ryde/CloudCode/cloud/v1/profile.js",
		"/Users/Jon/Code/Ryde/CloudCode/cloud/v2/approveTrip.js",
		"/Users/Jon/Code/Ryde/CloudCode/cloud/v2/googleDirections.js"
	],
	"find":
	{
		"height": 23.0
	},
	"find_in_files":
	{
		"height": 93.0,
		"where_history":
		[
			"",
			"/Users/Jon/Code/Ryde/Server/cloud/v3",
			"/Users/Jon/Code/Ryde/Server/",
			"/Users/Jon/Code/Ryde/Server/cloud/v3",
			"/Users/Jon/Code/Ryde/Ryde-Server/cloud/v3/",
			"/Users/Jon/Code/Ryde/Ryde-Server/cloud/v3",
			"/Users/Jon/Code/Ryde/Ryde-Server/cloud/v2",
			"/Users/Jon/Code/Ryde/Ryde-Server/cloud/",
			"/Users/Jon/Code/Ryde/CloudCode/cloud/",
			"/Users/Jon/Code/Ryde/CloudCode/cloud/v3",
			"/Users/Jon/Code/Ryde/CloudCode/cloud/v2",
			"/Users/Jon/Code/Ryde/CloudCode/cloud/v3",
			"/Users/Jon/Code/Ryde/CloudCode/cloud/v2",
			"/Users/Jon/Code/Ryde/CloudCode/cloud/v1",
			""
		]
	},
	"find_state":
	{
		"case_sensitive": false,
		"find_history":
		[
			"filter",
			"setRawJson",
			"/rec",
			"only",
			"sanitize",
			"res.send",
			"modified",
			"responseData",
			"typeof",
			"type",
			"createInventoryTransaction",
			"only",
			"appRjbkXS74hbsDqh",
			"recordId",
			"agent",
			"lineItems",
			"createdMaterials",
			"createdShipmentLineItems",
			"createdShipments",
			"airtablePromise",
			"only",
			"console.",
			"console",
			"return done",
			"only",
			"createdMaterials",
			"done",
			"airtablePromise",
			"airtable",
			"===",
			"business-model-constants",
			"appRjbkXS74hbsDqh",
			"request",
			"only",
			"tag",
			"54221",
			"SKUMaps",
			".update",
			"find(",
			"only",
			"InventoryTransactions",
			"Filter",
			"find(",
			"update",
			"create",
			"update",
			"create",
			"server",
			"console.log",
			"equal",
			"filter",
			"airtable-query",
			"resolve",
			"search(",
			"search",
			"SKUMaps",
			"shipstation helper",
			"console.",
			"base(",
			"Airtable",
			"Query",
			"_",
			"Promise",
			"json2csv",
			"countries",
			"materialMapper",
			"skuMapper",
			"shipstation",
			"res.",
			"res",
			"shipstationHel",
			"console",
			"console.log",
			".length",
			"console",
			"orders",
			"skuMapper",
			"console",
			"fulfillmentSku",
			"new",
			"sanitizeKey",
			"matches",
			"shipstationPromise",
			"baseRequest",
			"api",
			"apiUrl",
			"listbytag",
			"getOrdersByTag",
			"http://",
			"AsciiTable",
			"unique",
			"_",
			"Ascii",
			"unique",
			"_",
			"'Order",
			"Items Ordered",
			"Code",
			"json2csv",
			"containedIn",
			"zonesTable",
			"unique",
			"SKU Number",
			"argumentsToArray",
			"filterByFormula",
			"and(",
			"Promise",
			"\t\t\t\n",
			"filterByFormula",
			"scripts",
			"Compon",
			"view:",
			"containedIn",
			"salesChannel",
			"shopspace-local",
			"sales-channel",
			"require",
			"block",
			"Block",
			"1337",
			"ShopifyProduct",
			"/Product",
			"RedisDot",
			"redis",
			"RedisDot",
			"redis",
			"path",
			"path."
		],
		"highlight": true,
		"in_selection": false,
		"preserve_case": false,
		"regex": false,
		"replace_history":
		[
			"stats.getStartOfWeek(",
			"Percentile",
			"addToAverageSpeeds",
			"./",
			"moment",
			".",
			"./cloud/",
			"v2.stats",
			"v2.locationEngine",
			"v2.approveTrip",
			"v2.group",
			"v2.user",
			"v2.constants",
			"cloud/v2/",
			"'cloud/libraries/moment'",
			"stats",
			"leaderboard",
			"group",
			"user",
			"userWeeklyStats",
			"userWeeklyStatsObject",
			"UserWeeklyStats",
			"emptyObjectWithWeekOffset",
			"objectWithWeeklyStats",
			"objectWithStats",
			"emptyObjectForWeeklyStats",
			"objectForWeeklyStats"
		],
		"reverse": false,
		"show_context": true,
		"use_buffer2": true,
		"whole_word": false,
		"wrap": true
	},
	"groups":
	[
		{
			"sheets":
			[
			]
		}
	],
	"incremental_find":
	{
		"height": 23.0
	},
	"input":
	{
		"height": 31.0
	},
	"layout":
	{
		"cells":
		[
			[
				0,
				0,
				1,
				1
			]
		],
		"cols":
		[
			0.0,
			1.0
		],
		"rows":
		[
			0.0,
			1.0
		]
	},
	"menu_visible": true,
	"output.find_results":
	{
		"height": 0.0
	},
	"pinned_build_system": "",
	"project": "json-terminal.sublime-project",
	"replace":
	{
		"height": 42.0
	},
	"save_all_on_build": true,
	"select_file":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"record",
				"node_modules/airtable/lib/record.js"
			],
			[
				"shipment",
				"routes/business-model/shipments.js"
			],
			[
				"index",
				"index.js"
			],
			[
				"sku-mapp",
				"routes/fulfillment/sku-mapper.js"
			],
			[
				"pack",
				"package.json"
			],
			[
				"airtable-filter",
				"node_modules/airtable-filter/filter.js"
			],
			[
				"airtable-pro",
				"utils/airtable-promise.js"
			],
			[
				"packa",
				"package.json"
			],
			[
				"inde",
				"index.js"
			],
			[
				"airtable-prom",
				"utils/airtable-promise.js"
			],
			[
				"shipments",
				"routes/business-model/shipments.js"
			],
			[
				"materi",
				"routes/business-model/materials.js"
			],
			[
				"sku-",
				"routes/fulfillment/sku-mapper.js"
			],
			[
				"airtable-promise",
				"utils/airtable-promise.js"
			],
			[
				"test",
				"test/test.js"
			],
			[
				"table",
				"node_modules/airtable/lib/table.js"
			],
			[
				"pcka",
				"package.json"
			],
			[
				"filter",
				"node_modules/airtable-filter/filter.js"
			],
			[
				"airtable-fil",
				"node_modules/airtable-filter/filter.js"
			],
			[
				"tag-ru",
				"routes/fulfillment/has-tag-rule.js"
			],
			[
				"alway",
				"routes/fulfillment/always-rule.js"
			],
			[
				"has-tag",
				"routes/fulfillment/has-tag-rule.js"
			],
			[
				"index.js",
				"node_modules/airtable-query/index.js"
			],
			[
				"air",
				"airtable/airtable-query.js"
			],
			[
				"rediscache",
				"node_modules/rediscache/dist/rediscache.js"
			],
			[
				"redis-dot",
				"node_modules/redis-dot/redis-dot.js"
			],
			[
				"redis/index",
				"node_modules/redis/index.js"
			],
			[
				"replyerror",
				"node_modules/redis-parser/lib/replyError.js"
			],
			[
				"parser",
				"node_modules/redis-parser/lib/parser.js"
			],
			[
				"index.",
				"index.js"
			]
		],
		"width": 0.0
	},
	"select_project":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"select_symbol":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"selected_group": 0,
	"settings":
	{
	},
	"show_minimap": false,
	"show_open_files": false,
	"show_tabs": true,
	"side_bar_visible": true,
	"side_bar_width": 252.0,
	"status_bar_visible": true,
	"template_settings":
	{
	}
}
